package jetbrains.mps.baseLanguage.string.format.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.smodel.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;

public class StringPreprocessorUtil {
  private static String PARAMETER_PREFIX = "{";

  public static String filter(EditorContext context, SNode sourceNode, String text) {
    if ((text == null || text.length() == 0)) {
      return text;
    }
    int indexOfPrefix = text.indexOf(PARAMETER_PREFIX);
    if (indexOfPrefix > -1) {
      int leftPartLength = indexOfPrefix + PARAMETER_PREFIX.length();
      String leftPart = text.substring(0, indexOfPrefix);
      String rightPart = text.substring(leftPartLength);
      SNode expression = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.string.format.structure.ExpressionStringComponent", null);
      SNodeOperations.insertNextSiblingChild(sourceNode, expression);
      SNode stringComponent = SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.string.format.structure.PlainStringComponent", null);
      SPropertyOperations.set(stringComponent, "value", rightPart);
      SNodeOperations.insertNextSiblingChild(expression, stringComponent);
      text = leftPart;
      context.selectWRTFocusPolicy(expression);
    }
    return text;
  }
}
